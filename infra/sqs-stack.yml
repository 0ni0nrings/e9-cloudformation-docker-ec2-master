AWSTemplateFormatVersion: 2010-09-09
Description: 'SQS Queue, Alarm'

Resources: 
  SQSQueue: 
    Type: AWS::SQS::Queue
    Properties: 
      QueueName: "SampleQueue"
      
  ECSSQSAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmName: "ECSSQSAlarm"
      AlarmDescription: "Trigger scaling based on SQS queue"
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      ComparisonOperator: "GreaterThanThreshold"
      Dimensions:
        - Name: QueueName
          Value: !Ref "SQSQueue"
      EvaluationPeriods: 2
      Period: 60
      Statistic: 'Average'
      Threshold: 100
      AlarmActions:
        - !Ref ScaleUp
        - !Ref ScaleUp1
      OKActions:
        - !Ref ScaleDown
        - !Ref ScaleDown2
  
  ScaleUp:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ContainerPolicyUp
      PolicyType: StepScaling
      ScalingTargetId: !Ref ECSServiceTarget
      StepScalingPolicyConfiguration:
        Cooldown: 60
        MetricAggregationType: "Average"
        AdjustmentType: "ChangeInCapacity"
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 100
            ScalingAdjustment: 2
          - MetricIntervalLowerBound: 100
            ScalingAdjustment: 4
            
  ScaleDown:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ParserPolicyDown
      PolicyType: StepScaling
      ScalingTargetId: !Ref ECSServiceTarget
      StepScalingPolicyConfiguration:
        Cooldown: 60
        MetricAggregationType: "Average"
        AdjustmentType: "ChangeInCapacity"
        StepAdjustments:
          - MetricIntervalUpperBound: -1
            MetricIntervalLowerBound: -100
            ScalingAdjustment: -1
          - MetricIntervalUpperBound: -100
            ScalingAdjustment: -2
            
  ECSServiceTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 1
      ResourceId: !Join ["/", [service, !ImportValue "ECSCluster", !ImportValue ServiceName]]
      RoleARN: !ImportValue ECSServiceAutoScalingRole
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
  
  ScaleUp1:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ContainerPolicyUp
      PolicyType: StepScaling
      ScalingTargetId: !Ref ECSServiceTarget1
      StepScalingPolicyConfiguration:
        Cooldown: 60
        MetricAggregationType: "Average"
        AdjustmentType: "ChangeInCapacity"
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            MetricIntervalUpperBound: 100
            ScalingAdjustment: 2
          - MetricIntervalLowerBound: 100
            ScalingAdjustment: 4
            
  ScaleDown2:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ParserPolicyDown
      PolicyType: StepScaling
      ScalingTargetId: !Ref ECSServiceTarget1
      StepScalingPolicyConfiguration:
        Cooldown: 60
        MetricAggregationType: "Average"
        AdjustmentType: "ChangeInCapacity"
        StepAdjustments:
          - MetricIntervalUpperBound: -1
            MetricIntervalLowerBound: -100
            ScalingAdjustment: -1
          - MetricIntervalUpperBound: -100
            ScalingAdjustment: -2
            
  ECSServiceTarget1:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 1
      ResourceId: !Join ["/", [service, !ImportValue "ECSCluster", !ImportValue ServiceName1]]
      RoleARN: !ImportValue ECSServiceAutoScalingRole
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs