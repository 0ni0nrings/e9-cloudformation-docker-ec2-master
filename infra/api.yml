AWSTemplateFormatVersion: '2010-09-09'
Description: container on ecs cluster

Resources:
  
  TaskEmployee:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: employee
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue ECSTaskExecutionRole
      ContainerDefinitions:
        - Name: container-a
          Image: 699767780759.dkr.ecr.ap-southeast-2.amazonaws.com/container-docker-store:container-employee-service-api
          Cpu: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 3000
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: 'employee'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'employee-api'
              
  TaskDepartment:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: department
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue ECSTaskExecutionRole
      ContainerDefinitions:
        - Name: container-b
          Image: 699767780759.dkr.ecr.ap-southeast-2.amazonaws.com/container-docker-store:container-department-service-api
          Cpu: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 4000
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: 'department'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'department-api'

  ServiceEmployee:
    Type: AWS::ECS::Service
    DependsOn: 
        - ListenerRuleEmployee
    Properties:
      ServiceName: container-employee
      TaskDefinition: !Ref TaskEmployee
      Cluster: !ImportValue 'ECSCluster'
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !ImportValue Subnet1
            - !ImportValue Subnet2
          SecurityGroups:
            - !ImportValue ContainerSecurityGroup
      LoadBalancers:
        - ContainerName: container-a
          ContainerPort: 3000
          TargetGroupArn: !Ref TargetGroupEmployee
  
  ServiceDepartment:
    Type: AWS::ECS::Service
    DependsOn: 
        - ListenerRuleDepartment
    Properties:
      ServiceName: container-department
      TaskDefinition: !Ref TaskDepartment
      Cluster: !ImportValue 'ECSCluster'
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !ImportValue Subnet1
            - !ImportValue Subnet2
          SecurityGroups:
            - !ImportValue ContainerSecurityGroup
      LoadBalancers:
        - ContainerName: container-b
          ContainerPort: 4000
          TargetGroupArn: !Ref TargetGroupDepartment

  TargetGroupEmployee:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: containerA-tg
      VpcId: !ImportValue VPC
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /healthcheck
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 10
      TargetType: ip
  
  TargetGroupDepartment:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: containerB-tg
      VpcId: !ImportValue VPC
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /healthcheck
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 10
      TargetType: ip

  ListenerRuleEmployee:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !ImportValue Listener
      Priority: 2
      Conditions:
        - Field: path-pattern
          Values:
            - /api/containerone/employee*
      Actions:
        - TargetGroupArn: !Ref TargetGroupEmployee
          Type: forward
  
  ListenerRuleDepartment:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !ImportValue Listener
      Priority: 3
      Conditions:
        - Field: path-pattern
          Values:
            - /api/containertwo/department*
      Actions:
        - TargetGroupArn: !Ref TargetGroupDepartment
          Type: forward


Outputs:

  ApiEndpoint1:
    Description: Container API Endpoint
    Value: !Join ['', ['https://',!ImportValue HostName,'/api/containerone/employee']]
    Export:
      Name: 'EmployeeEndPoint'
  ApiEndpoint2:
    Description: Container API Endpoint
    Value: !Join ['', ['https://',!ImportValue HostName,'/api/containertwo/department']]
    Export:
      Name: 'DepartmentEndPoint'
  ServiceName:
    Value: !GetAtt [ServiceEmployee, Name]
    Export:
        Name: ServiceName
  ServiceName1:
    Value: !GetAtt [ServiceDepartment, Name]
    Export:
        Name: ServiceName1
